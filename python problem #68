"""
Given an integer array nums and an integer k, return the number of good subarrays of nums.

A subarray arr is good if there are at least k pairs of indices (i, j) such that i < j and arr[i] == arr[j].

A subarray is a contiguous non-empty sequence of elements within an array.
"""


from collections import defaultdict

def count_good_subarrays(nums, k):
    count = 0
    freq = defaultdict(int)
    left = 0
    pairs = 0

    for right in range(len(nums)):
        # Add nums[right] to the window
        pairs += freq[nums[right]]
        freq[nums[right]] += 1

        # Shrink window from the left if we have enough pairs
        while pairs >= k:
            count += len(nums) - right
            freq[nums[left]] -= 1
            pairs -= freq[nums[left]]
            left += 1

    return count
