# Construct Binary Tree from Preorder and Postorder Traversal
"""
Given two integer arrays, preorder and postorder where preorder is the preorder traversal of a binary tree of distinct values and postorder is the postorder traversal of the same tree, reconstruct and return the binary tree.

If there exist multiple answers, you can return any of them.
"""

# LeetCode already provides this definition
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def constructFromPrePost(self, preorder, postorder):
        if not preorder:
            return None

        root = TreeNode(preorder[0])
        if len(preorder) == 1:
            return root

        left_subtree_root_val = preorder[1]
        left_subtree_size = postorder.index(left_subtree_root_val) + 1

        root.left = self.constructFromPrePost(
            preorder[1:1 + left_subtree_size],
            postorder[0:left_subtree_size]
        )
        root.right = self.constructFromPrePost(
            preorder[1 + left_subtree_size:],
            postorder[left_subtree_size:-1]
        )
        return root
