# Count Symmetric Integers
"""
You are given two positive integers low and high.

An integer x consisting of 2 * n digits is symmetric if the sum of the first n digits of x is equal to the sum of the last n digits of x. Numbers with an odd number of digits are never symmetric.

Return the number of symmetric integers in the range [low, high].
"""

def countSymmetricIntegers(low, high):
    count = 0
    for num in range(low, high + 1):
        s = str(num)
        if len(s) % 2 != 0:
            continue  # must be even length
        mid = len(s) // 2
        first_half = s[:mid]
        second_half = s[mid:]
        if sum(map(int, first_half)) == sum(map(int, second_half)):
            count += 1
    return count
