# Count the Number of Good Subarrays
"""
Given an integer array nums and an integer k, return the number of good subarrays of nums.

A subarray arr is good if there are at least k pairs of indices (i, j) such that i < j and arr[i] == arr[j].

A subarray is a contiguous non-empty sequence of elements within an array.
"""

from collections import defaultdict

def countGood(nums, k):
    left = 0
    pair_count = 0
    freq = defaultdict(int)
    result = 0

    for right in range(len(nums)):
        val = nums[right]
        
        # Add the current number and update pair count
        pair_count += freq[val]
        freq[val] += 1
        
        # Shrink window from left until pair_count < k
        while pair_count >= k:
            result += len(nums) - right  # all subarrays [left...right], [left...right+1], ... are valid
            freq[nums[left]] -= 1
            pair_count -= freq[nums[left]]
            left += 1

    return result
